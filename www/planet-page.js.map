{"version":3,"sources":["webpack:////home/cleong/relaks/index.js","webpack:///./pages/planet-page.jsx","webpack:///./widgets/loading.jsx","webpack:///./widgets/list.jsx"],"names":["_options__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_hooks__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","get","set","plant","use","memo","_callee","props","route","swapi","_useProgress","_useProgress2","show","planet","films","residents","render","babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","name","diameter","rotation_period","orbital_period","climate","gravity","terrain","surface_water","population","widgets_list__WEBPACK_IMPORTED_MODULE_6__","urls","items","pageName","field","widgets_loading__WEBPACK_IMPORTED_MODULE_7__","useProgress","babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","fetchOne","params","id","sent","fetchMultiple","minimum","stop","this","component","Relaks","PlanetPage","d","Loading","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","className","List","map","url","index","item","pending","length","i","extractID","find","text","linkProps","href","undefined","key","defaultProps"],"mappings":"sGAAA,IAAAA,EAAAC,EAAA,IAAAC,EAAAD,EAAA,IAGeE,EAAA,GACdC,IAAKA,IACLC,IAAKA,IACLC,MAAOA,IAEPC,IAAKA,IACLC,KAAMA,gNCJP,SAAAC,EAA0BC,GAA1B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAYaC,EAZb,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAYaN,EAZb,WAgBYJ,EAHCC,EAIGU,EAAAL,EAAAM,cAAA,WACID,EAAAL,EAAAM,cAAA,UAAKX,EAAOY,MACZF,EAAAL,EAAAM,cAAA,wBAAgBX,EAAOa,SAAvB,OACAH,EAAAL,EAAAM,cAAA,+BAAuBX,EAAOc,gBAA9B,OACAJ,EAAAL,EAAAM,cAAA,8BAAsBX,EAAOe,eAA7B,SACAL,EAAAL,EAAAM,cAAA,uBAAeX,EAAOgB,SACtBN,EAAAL,EAAAM,cAAA,uBAAeX,EAAOiB,SACtBP,EAAAL,EAAAM,cAAA,uBAAeX,EAAOkB,SACtBR,EAAAL,EAAAM,cAAA,6BAAqBX,EAAOmB,eAC5BT,EAAAL,EAAAM,cAAA,0BAAkBX,EAAOoB,YACzBV,EAAAL,EAAAM,cAAA,uBACAD,EAAAL,EAAAM,cAACU,EAAA,EAAD,CAAMC,KAAMtB,EAAOE,UAAWqB,MAAOrB,EAAWsB,SAAS,oBAAoB7B,MAAOA,IACpFe,EAAAL,EAAAM,cAAA,mBACAD,EAAAL,EAAAM,cAACU,EAAA,EAAD,CAAMC,KAAMtB,EAAOC,MAAOsB,MAAOtB,EAAOwB,MAAM,QAAQD,SAAS,eAAe7B,MAAOA,KAhBxFe,EAAAL,EAAAM,cAACe,EAAA,EAAD,QAbL/B,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MADnBC,EAEqB8B,cAFrB7B,EAAA8B,IAAA/B,EAAA,GAEYE,EAFZD,EAAA,GAIIK,IAJJI,EAAAE,KAAA,EAKyBb,EAAMiC,SAAN,YAA2BlC,EAAMmC,OAAOC,GAAxC,KALzB,cAKU/B,EALVO,EAAAyB,KAMI7B,IANJI,EAAAE,KAAA,GAOwBb,EAAMqC,cAAcjC,EAAOC,MAAO,CAAEiC,QAAS,QAPrE,eAOUjC,EAPVM,EAAAyB,KAQI7B,IARJI,EAAAE,KAAA,GAS4Bb,EAAMqC,cAAcjC,EAAOE,UAAW,CAAEgC,QAAS,QAT7E,QASUhC,EATVK,EAAAyB,KAUI7B,IAVJ,yBAAAI,EAAA4B,SAAA1C,EAAA2C,sDAqCMC,EAAYC,IAAO9C,KAAK+C,qCC1C9BtD,EAAAuD,EAAArD,EAAA,sBAAAsD,IAAA,IAAAC,EAAAzD,EAAA,GAAA0D,EAAA1D,EAAA2D,EAAAF,GAEA,SAASD,IACL,OACIE,EAAAtC,EAAAM,cAAA,OAAKkC,UAAU,WACXF,EAAAtC,EAAAM,cAAA,WACIgC,EAAAtC,EAAAM,cAAA,KAAGkC,UAAU,0BADjB,gDCLZ5D,EAAAuD,EAAArD,EAAA,sBAAA2D,IAAA,IAAAJ,EAAAzD,EAAA,GAAA0D,EAAA1D,EAAA2D,EAAAF,GAEA,SAASI,EAAKpD,GAAO,IACXC,EAAwCD,EAAxCC,MAAO2B,EAAiC5B,EAAjC4B,KAAMC,EAA2B7B,EAA3B6B,MAAOE,EAAoB/B,EAApB+B,MAAOD,EAAa9B,EAAb8B,SAgBjC,OAfIF,IAEqB,iBAAVA,IACPA,EAAO,CAAEA,GACTC,EAAQ,CAAEA,IAGdA,EAAQD,EAAKyB,IAAI,SAACC,EAAKC,GACnB,IAAIC,EAAQ3B,EAASA,EAAM0B,GAAS,KAIpC,OAHKC,IACDA,EAAO,CAAEF,MAAKG,SAAS,IAEpBD,KAGV3B,EAGgB,IAAjBA,EAAM6B,OACCT,EAAAtC,EAAAM,cAAA,MAAIkC,UAAU,SAAQF,EAAAtC,EAAAM,cAAA,UAAIgC,EAAAtC,EAAAM,cAAA,sBAE9BgC,EAAAtC,EAAAM,cAAA,UAAKY,EAAMwB,IAElB,SAAoBG,EAAMG,GACtB,IAAMtB,EAAKpC,EAAM2D,UAAUJ,EAAKF,KAC1BA,EAAMrD,EAAM4D,KAAK/B,EAAU,CAAEO,OAC7ByB,EAAON,EAAKC,QAAU,MAAQD,EAAKzB,GACnCgC,EAAY,CACdC,KAAMV,EACNH,UAAYK,EAAKC,QAAW,eAAYQ,GAE5C,OAAOhB,EAAAtC,EAAAM,cAAA,MAAIiD,IAAKP,GAAGV,EAAAtC,EAAAM,cAAA,IAAO8C,EAAYD,OAf/B,KAmBfV,EAAKe,aAAe,CAChBpC,MAAO","file":"planet-page.js","sourcesContent":["import { get, set, plant } from './options';\nimport { use, memo } from './hooks';\n\nexport default {\n\tget: get,\n\tset: set,\n\tplant: plant,\n\n\tuse: use,\n\tmemo: memo,\t\n};\n\nexport * from './options';\nexport * from './class';\nexport * from './hooks';\nexport * from './async-rendering-cycle';\nexport * from './async-rendering-interrupted';\nexport * from './async-save-buffer';\n","import React from 'react';\nimport Relaks, { useProgress } from 'relaks';\nimport { List } from 'widgets/list';\nimport { Loading } from 'widgets/loading';\n\nasync function PlanetPage(props) {\n    const { route, swapi } = props;\n    const [ show ] = useProgress();\n\n    render();\n    const planet = await swapi.fetchOne(`/planets/${route.params.id}/`);\n    render();\n    const films = await swapi.fetchMultiple(planet.films, { minimum: '60%' });\n    render();\n    const residents = await swapi.fetchMultiple(planet.residents, { minimum: '60%' });\n    render();\n\n    function render() {\n        if (!planet) {\n            show(<Loading />);\n        } else {\n            show(\n                <div>\n                    <h1>{planet.name}</h1>\n                    <div>Diameter: {planet.diameter} km</div>\n                    <div>Rotation period: {planet.rotation_period} hr</div>\n                    <div>Orbital period: {planet.orbital_period} days</div>\n                    <div>Climate: {planet.climate}</div>\n                    <div>Gravity: {planet.gravity}</div>\n                    <div>Terrain: {planet.terrain}</div>\n                    <div>Surface water: {planet.surface_water}</div>\n                    <div>Population: {planet.population}</div>\n                    <h2>Residents</h2>\n                    <List urls={planet.residents} items={residents} pageName=\"character-summary\" route={route} />\n                    <h2>Films</h2>\n                    <List urls={planet.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n                </div>\n            );\n        }\n    }\n}\n\nconst component = Relaks.memo(PlanetPage);\n\nexport {\n    component as default,\n};\n","import React, { Component } from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List\n};\n"],"sourceRoot":""}