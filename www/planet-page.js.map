{"version":3,"sources":["webpack:///./pages/planet-page.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["_callee","props","route","swapi","_useProgress","_useProgress2","show","planet","films","residents","render","_regenerator2","default","wrap","_context","prev","next","_react2","createElement","name","diameter","rotation_period","orbital_period","climate","gravity","terrain","surface_water","population","_list","List","urls","items","pageName","field","_loading2","_hooks","useProgress","_slicedToArray3","fetchOne","params","id","sent","fetchMultiple","minimum","stop","this","__webpack_require__","PlanetPage","displayName","asyncComponent","_hooks2","_react","map","url","index","item","pending","length","className","i","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"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","file":"planet-page.js","sourcesContent":["import React, { Component } from 'react';\nimport Relaks, { useProgress } from 'relaks/hooks';\nimport { List } from 'widgets/list';\nimport Loading from 'widgets/loading';\n\nasync function PlanetPage(props) {\n    const { route, swapi } = props;\n    const [ show ] = useProgress();\n\n    render();\n    const planet = await swapi.fetchOne(`/planets/${route.params.id}/`);\n    render();\n    const films = await swapi.fetchMultiple(planet.films, { minimum: '60%' });\n    render();\n    const residents = await swapi.fetchMultiple(planet.residents, { minimum: '60%' });\n    render();\n\n    function render() {\n        if (!planet) {\n            show(<Loading />);\n        } else {\n            show(\n                <div>\n                    <h1>{planet.name}</h1>\n                    <div>Diameter: {planet.diameter} km</div>\n                    <div>Rotation period: {planet.rotation_period} hr</div>\n                    <div>Orbital period: {planet.orbital_period} days</div>\n                    <div>Climate: {planet.climate}</div>\n                    <div>Gravity: {planet.gravity}</div>\n                    <div>Terrain: {planet.terrain}</div>\n                    <div>Surface water: {planet.surface_water}</div>\n                    <div>Population: {planet.population}</div>\n                    <h2>Residents</h2>\n                    <List urls={planet.residents} items={residents} pageName=\"character-summary\" route={route} />\n                    <h2>Films</h2>\n                    <List urls={planet.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n                </div>\n            );\n        }\n    }\n}\n\n// set display name so it appears in React Dev Console when code is uglified\nPlanetPage.displayName = 'PlanetPage';\n\nconst asyncComponent = Relaks(PlanetPage);\n\nexport {\n    asyncComponent as default,\n    asyncComponent as PlanetPage,\n};\n","import React, { Component } from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\n// set display name so it appears in React Dev Console when code is uglified\nList.displayName = 'List';\n\nexport {\n    List as default,\n    List\n};\n","import React, { Component } from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\n// set display name so it appears in React Dev Console when code is uglified\nLoading.displayName = 'Loading';\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}