{"version":3,"sources":["webpack:///./pages/film-list.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["props","render","a","show","films","items","field","pageName","route","swapi","useProgress","fetchList","more","component","Relaks","memo","List","urls","map","url","index","item","pending","length","className","i","id","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"iRAKA,WAAwBA,GAAxB,gBAUWC,EAVX,SAAAC,EAAA,6DAUWD,EAVX,WAcME,EAHGC,EAID,6BACE,qCACA,kBAAC,IAAD,CAAMC,MAAOD,EAAOE,MAAM,QAAQC,SAAS,eAAeC,MAAOA,KALhE,kBAAC,IAAD,QAXDA,EAAiBR,EAAjBQ,MAAOC,EAAUT,EAAVS,MADjB,EAEmBC,cAFnB,WAEUP,EAFV,KAIEF,IAJF,SAKsBQ,EAAME,UAAU,WALtC,OAKQP,EALR,OAMEH,IAEAG,EAAMQ,OARR,4C,sBAwBA,IAAMC,EAAYC,IAAOC,M,+EC7BzB,sDAEA,SAASC,EAAKhB,GAAO,IACXQ,EAAwCR,EAAxCQ,MAAOS,EAAiCjB,EAAjCiB,KAAMZ,EAA2BL,EAA3BK,MAAOC,EAAoBN,EAApBM,MAAOC,EAAaP,EAAbO,SAgBjC,OAfIU,IAEqB,iBAAVA,IACPA,EAAO,CAAEA,GACTZ,EAAQ,CAAEA,IAGdA,EAAQY,EAAKC,KAAI,SAACC,EAAKC,GACnB,IAAIC,EAAQhB,EAASA,EAAMe,GAAS,KAIpC,OAHKC,IACDA,EAAO,CAAEF,MAAKG,SAAS,IAEpBD,MAGVhB,EAGgB,IAAjBA,EAAMkB,OACC,wBAAIC,UAAU,SAAQ,4BAAI,wCAE9B,4BAAKnB,EAAMa,KAElB,SAAoBG,EAAMI,GACtB,IAAMC,EAAKlB,EAAMmB,UAAUN,EAAKF,KAC1BA,EAAMX,EAAMoB,KAAKrB,EAAU,CAAEmB,OAC7BG,EAAOR,EAAKC,QAAU,MAAQD,EAAKf,GACnCwB,EAAY,CACdC,KAAMZ,EACNK,UAAYH,EAAKC,QAAW,eAAYU,GAE5C,OAAO,wBAAIC,IAAKR,GAAG,sBAAOK,EAAYD,QAf/B,KAmBfb,EAAKkB,aAAe,CAChB5B,MAAO,S,gCCxCX,sDAEA,SAAS6B,IACL,OACI,yBAAKX,UAAU,WACX,6BACI,uBAAGA,UAAU,0BADjB","file":"film-list.js","sourcesContent":["import React from 'react';\nimport Relaks, { useProgress } from 'relaks';\nimport { List } from '../widgets/list.jsx';\nimport { Loading } from '../widgets/loading.jsx';\n\nasync function FilmList(props) {\n  const { route, swapi } = props;\n  const [ show ] = useProgress();\n\n  render();\n  const films = await swapi.fetchList('/films/');\n  render();\n\n  films.more();\n\n  function render() {\n    if (!films) {\n      show(<Loading />);\n    } else {\n      show(\n        <div>\n          <h1>Films</h1>\n          <List items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n        </div>\n      );\n    }\n  }\n}\n\nconst component = Relaks.memo(FilmList);\n\nexport {\n  component as default,\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List\n};\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}