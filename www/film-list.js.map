{"version":3,"sources":["webpack:///./pages/film-list.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["_preact","__webpack_require__","_preact2","FilmList","meanwhile","this","props","route","swapi","show","h","FilmListSync","fetchList","planets","more","AsyncComponent","displayName","_props2","_loading2","default","listProps","items","field","pageName","_list2","Component","List","urls","map","url","index","item","pending","length","className","id","extractID","find","text","linkProps","href","undefined","defaultProps","Loading"],"mappings":"iRAAAA,EAAAC,EAAA,IACAC,EAAAD,EAAA,QACAA,EAAA,UACAA,EAAA,6DAIME,6PAUgBC,8FACSC,KAAKC,MAAtBC,UAAOC,UACTF,EAAQ,CACRC,SAEJH,EAAUK,MAAK,EAAAT,EAAAU,GAACC,EAAiBL,aACXE,EAAMI,UAAU,yBAAtCN,EAAMO,eACNP,EAAMO,QAAQC,0BACP,EAAAd,EAAAU,GAACC,EAAiBL,8GAlBVS,kBAAjBZ,EACKa,YAAc,eAqBnBL,0MAQO,IAAAM,EACoBZ,KAAKC,MAAxBO,EADDI,EACCJ,QAASN,EADVU,EACUV,MACf,IAAKM,EACD,OAAO,EAAAb,EAAAU,GAACQ,EAAAC,QAAD,MAEX,IAAIC,EAAY,CACZC,MAAOR,EACPS,MAAO,QACPC,SAAU,eACVhB,SAEJ,OACI,EAAAP,EAAAU,GAAA,YACI,EAAAV,EAAAU,GAAA,oBACA,EAAAV,EAAAU,GAACc,EAAAL,QAASC,WAtBCK,aAArBd,EACKK,YAAc,iBA4BTG,QAAZhB,IACAA,aACAQ,0HC5DJ,IAAAX,EAAAC,EAAA,IAIA,SAASyB,EAAKpB,GAAO,IACXC,EAAwCD,EAAxCC,MAAOoB,EAAiCrB,EAAjCqB,KAAMN,EAA2Bf,EAA3Be,MAAOC,EAAoBhB,EAApBgB,MAAOC,EAAajB,EAAbiB,SAgBjC,OAfII,IAEqB,iBAAVA,IACPA,EAAO,CAAEA,GACTN,EAAQ,CAAEA,IAGdA,EAAQM,EAAKC,IAAI,SAACC,EAAKC,GACnB,IAAIC,EAAQV,EAASA,EAAMS,GAAS,KAIpC,OAHKC,IACDA,EAAO,CAAEF,MAAKG,SAAS,IAEpBD,KAGVV,EAGgB,IAAjBA,EAAMY,QACC,EAAAjC,EAAAU,GAAA,MAAIwB,UAAU,UAAQ,EAAAlC,EAAAU,GAAA,WAAI,EAAAV,EAAAU,GAAA,uBAGjC,EAAAV,EAAAU,GAAA,UAEIW,EAAMO,IAAI,SAACG,GACP,IAAII,EAAK5B,EAAM6B,UAAUL,EAAKF,KAC1BA,EAAMtB,EAAM8B,KAAKd,EAAU,CAAEY,OAC7BG,EAAOP,EAAKC,QAAU,MAAQD,EAAKT,GACnCiB,EAAY,CACZC,KAAMX,EACNK,UAAYH,EAAKC,QAAW,eAAYS,GAE5C,OAAO,EAAAzC,EAAAU,GAAA,WAAI,EAAAV,EAAAU,GAAA,IAAO6B,EAAYD,OAhB/B,KAuBfZ,EAAKgB,aAAe,CAChBpB,MAAO,QAGXI,EAAKV,YAAc,SAGPG,QAARO,IACAA,qHCrDJ,IAAA1B,EAAAC,EAAA,IAIA,SAAS0C,IACL,OACI,EAAA3C,EAAAU,GAAA,OAAKwB,UAAU,YACX,EAAAlC,EAAAU,GAAA,YACI,EAAAV,EAAAU,GAAA,KAAGwB,UAAU,0BADjB,aAOZS,EAAQ3B,YAAc,YAGPG,QAAXwB,IACAA","file":"film-list.js","sourcesContent":["import { h, Component } from 'preact';\nimport { AsyncComponent } from 'relaks/preact';\nimport List from 'widgets/list';\nimport Loading from 'widgets/loading';\n\n/** @jsx h */\n\nclass FilmList extends AsyncComponent {\n    static displayName = 'FilmList';\n\n    /**\n     * Retrieve remote data and render the synchronize half of this component\n     *\n     * @param  {Meanwhile}  meanwhile\n     *\n     * @return {VNode}\n     */\n    async renderAsync(meanwhile) {\n        let { route, swapi } = this.props;\n        let props = {\n            route,\n        };\n        meanwhile.show(<FilmListSync {...props} />);\n        props.planets = await swapi.fetchList('/films/');\n        props.planets.more();\n        return <FilmListSync {...props} />;\n    }\n}\n\nclass FilmListSync extends Component {\n    static displayName = 'FilmListSync';\n\n    /**\n     * Render the component, making best effort using what props are given\n     *\n     * @return {VNode}\n     */\n    render() {\n        let { planets, route } = this.props;\n        if (!planets) {\n            return <Loading />;\n        }\n        let listProps = {\n            items: planets,\n            field: 'title',\n            pageName: 'film-summary',\n            route,\n        };\n        return (\n            <div>\n                <h1>Films</h1>\n                <List {...listProps} />\n            </div>\n        );\n    }\n}\n\nexport {\n    FilmList as default,\n    FilmList,\n    FilmListSync\n};\n","import { h, Component } from 'preact';\n\n/** @jsx h */\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return (\n        <ul>\n        {\n            items.map((item) => {\n                let id = route.extractID(item.url);\n                let url = route.find(pageName, { id });\n                let text = item.pending ? '...' : item[field];\n                let linkProps = {\n                    href: url,\n                    className: (item.pending) ? 'pending' : undefined,\n                };\n                return <li><a {...linkProps}>{text}</a></li>;\n            })\n        }\n        </ul>\n    );\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nList.displayName = 'List';\n\nexport {\n    List as default,\n    List\n};\n","import { h, Component } from 'preact';\n\n/** @jsx h */\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nLoading.displayName = 'Loading';\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}