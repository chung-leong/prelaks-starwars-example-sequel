{"version":3,"sources":["webpack:///./pages/vehicle-page.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["_callee","props","route","swapi","_useProgress","_useProgress2","show","vehicle","films","pilots","render","_regenerator2","default","wrap","_context","prev","next","_react2","createElement","name","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","crew","passenger","cargo_capacity","consumables","vehicle_class","_list","List","urls","items","pageName","field","_loading2","_hooks","useProgress","_slicedToArray3","fetchOne","params","id","sent","fetchMultiple","minimum","stop","this","__webpack_require__","VehiclePage","displayName","asyncComponent","_hooks2","_react","map","url","index","item","pending","className","i","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"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","file":"vehicle-page.js","sourcesContent":["import React, { Component } from 'react';\nimport Relaks, { useProgress } from 'relaks/hooks';\nimport { List } from 'widgets/list';\nimport Loading from 'widgets/loading';\n\nasync function VehiclePage(props) {\n    const { route, swapi } = props;\n    const [ show ] = useProgress();\n\n    render();\n    const vehicle = await swapi.fetchOne(`/vehicles/${route.params.id}/`);\n    render();\n    const films = await swapi.fetchMultiple(vehicle.films, { minimum: '60%' });\n    render();\n    const pilots = await swapi.fetchMultiple(vehicle.pilots, { minimum: '60%' });\n    render();\n\n    function render() {\n        if (!vehicle) {\n            show(<Loading />);\n        } else {\n            show(\n                <div>\n                    <h1>{vehicle.name}</h1>\n                    <div>Model: {vehicle.model}</div>\n                    <div>Manufacturer: {vehicle.manufacturer}</div>\n                    <div>Cost in credits: {vehicle.cost_in_credits}</div>\n                    <div>Length: {vehicle.length} m</div>\n                    <div>Max atmosphering speed: {vehicle.max_atmosphering_speed} km/h</div>\n                    <div>Crew: {vehicle.crew}</div>\n                    <div>Passengers: {vehicle.passenger}</div>\n                    <div>Cargo capacity: {vehicle.cargo_capacity} kg</div>\n                    <div>Consumables: {vehicle.consumables}</div>\n                    <div>Vehicle class: {vehicle.vehicle_class}</div>\n                    <h2>Pilots</h2>\n                    <List urls={vehicle.pilots} items={pilots} pageName=\"character-summary\" route={route} />\n                    <h2>Films</h2>\n                    <List urls={vehicle.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n                </div>\n            );\n        }\n    }\n}\n\n// set display name so it appears in React Dev Console when code is uglified\nVehiclePage.displayName = 'VehiclePage';\n\nconst asyncComponent = Relaks(VehiclePage);\n\nexport {\n    asyncComponent as default,\n    asyncComponent as VehiclePage,\n};\n","import React, { Component } from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\n// set display name so it appears in React Dev Console when code is uglified\nList.displayName = 'List';\n\nexport {\n    List as default,\n    List\n};\n","import React, { Component } from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\n// set display name so it appears in React Dev Console when code is uglified\nLoading.displayName = 'Loading';\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}