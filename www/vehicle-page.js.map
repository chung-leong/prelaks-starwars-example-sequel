{"version":3,"sources":["webpack:///../node_modules/relaks/index.js","webpack:///./pages/vehicle-page.jsx","webpack:///./widgets/loading.jsx","webpack:///./widgets/list.jsx"],"names":["_options__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_hooks__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","get","set","plant","use","memo","_callee","props","route","swapi","_useProgress","_useProgress2","show","vehicle","films","pilots","render","babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","name","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","crew","passenger","cargo_capacity","consumables","vehicle_class","widgets_list__WEBPACK_IMPORTED_MODULE_6__","urls","items","pageName","field","widgets_loading__WEBPACK_IMPORTED_MODULE_7__","useProgress","babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","fetchOne","params","id","sent","fetchMultiple","minimum","stop","this","component","Relaks","VehiclePage","d","Loading","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","className","List","map","url","index","item","pending","i","extractID","find","text","linkProps","href","undefined","key","defaultProps"],"mappings":"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","file":"vehicle-page.js","sourcesContent":["import { get, set, plant } from './options';\nimport { use, memo } from './hooks';\n\nexport default {\n\tget: get,\n\tset: set,\n\tplant: plant,\n\n\tuse: use,\n\tmemo: memo,\n};\n\nexport * from './options';\nexport * from './class';\nexport * from './hooks';\nexport * from './async-rendering-cycle';\nexport * from './async-rendering-interrupted';\nexport * from './async-save-buffer';\nexport * from './sticky-selection';\n","import React from 'react';\nimport Relaks, { useProgress } from 'relaks';\nimport { List } from 'widgets/list';\nimport { Loading } from 'widgets/loading';\n\nasync function VehiclePage(props) {\n    const { route, swapi } = props;\n    const [ show ] = useProgress();\n\n    render();\n    const vehicle = await swapi.fetchOne(`/vehicles/${route.params.id}/`);\n    render();\n    const films = await swapi.fetchMultiple(vehicle.films, { minimum: '60%' });\n    render();\n    const pilots = await swapi.fetchMultiple(vehicle.pilots, { minimum: '60%' });\n    render();\n\n    function render() {\n        if (!vehicle) {\n            show(<Loading />);\n        } else {\n            show(\n                <div>\n                    <h1>{vehicle.name}</h1>\n                    <div>Model: {vehicle.model}</div>\n                    <div>Manufacturer: {vehicle.manufacturer}</div>\n                    <div>Cost in credits: {vehicle.cost_in_credits}</div>\n                    <div>Length: {vehicle.length} m</div>\n                    <div>Max atmosphering speed: {vehicle.max_atmosphering_speed} km/h</div>\n                    <div>Crew: {vehicle.crew}</div>\n                    <div>Passengers: {vehicle.passenger}</div>\n                    <div>Cargo capacity: {vehicle.cargo_capacity} kg</div>\n                    <div>Consumables: {vehicle.consumables}</div>\n                    <div>Vehicle class: {vehicle.vehicle_class}</div>\n                    <h2>Pilots</h2>\n                    <List urls={vehicle.pilots} items={pilots} pageName=\"character-summary\" route={route} />\n                    <h2>Films</h2>\n                    <List urls={vehicle.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n                </div>\n            );\n        }\n    }\n}\n\nconst component = Relaks.memo(VehiclePage);\n\nexport {\n    component as default,\n};\n","import React, { Component } from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List\n};\n"],"sourceRoot":""}