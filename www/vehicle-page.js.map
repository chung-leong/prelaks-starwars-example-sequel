{"version":3,"sources":["webpack:///./pages/vehicle-page.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["props","render","a","show","vehicle","name","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","crew","passenger","cargo_capacity","consumables","vehicle_class","urls","pilots","items","pageName","route","films","field","swapi","useProgress","fetchOne","params","id","fetchMultiple","minimum","component","Relaks","memo","List","map","url","index","item","pending","className","i","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"oRAKA,WAA2BA,GAA3B,oBAYWC,EAZX,SAAAC,EAAA,6DAYWD,EAZX,WAgBME,EAHGC,EAID,6BACE,4BAAKA,EAAQC,MACb,uCAAaD,EAAQE,OACrB,8CAAoBF,EAAQG,cAC5B,iDAAuBH,EAAQI,iBAC/B,wCAAcJ,EAAQK,OAAtB,MACA,wDAA8BL,EAAQM,uBAAtC,SACA,sCAAYN,EAAQO,MACpB,4CAAkBP,EAAQQ,WAC1B,gDAAsBR,EAAQS,eAA9B,OACA,6CAAmBT,EAAQU,aAC3B,+CAAqBV,EAAQW,eAC7B,sCACA,kBAAC,IAAD,CAAMC,KAAMZ,EAAQa,OAAQC,MAAOD,EAAQE,SAAS,oBAAoBC,MAAOA,IAC/E,qCACA,kBAAC,IAAD,CAAMJ,KAAMZ,EAAQiB,MAAOH,MAAOG,EAAOC,MAAM,QAAQH,SAAS,eAAeC,MAAOA,KAlBrF,kBAAC,IAAD,QAbDA,EAAiBpB,EAAjBoB,MAAOG,EAAUvB,EAAVuB,MADjB,EAEmBC,cAFnB,WAEUrB,EAFV,KAIEF,IAJF,SAKwBsB,EAAME,SAAN,oBAA4BL,EAAMM,OAAOC,GAAzC,MALxB,cAKQvB,EALR,OAMEH,IANF,UAOsBsB,EAAMK,cAAcxB,EAAQiB,MAAO,CAAEQ,QAAS,QAPpE,eAOQR,EAPR,OAQEpB,IARF,UASuBsB,EAAMK,cAAcxB,EAAQa,OAAQ,CAAEY,QAAS,QATtE,QASQZ,EATR,OAUEhB,IAVF,6C,sBAuCA,IAAM6B,EAAYC,IAAOC,M,+EC5CzB,sDAEA,SAASC,EAAKjC,GAAO,IACXoB,EAAwCpB,EAAxCoB,MAAOJ,EAAiChB,EAAjCgB,KAAME,EAA2BlB,EAA3BkB,MAAOI,EAAoBtB,EAApBsB,MAAOH,EAAanB,EAAbmB,SAgBjC,OAfIH,IAEqB,iBAAVA,IACPA,EAAO,CAAEA,GACTE,EAAQ,CAAEA,IAGdA,EAAQF,EAAKkB,KAAI,SAACC,EAAKC,GACnB,IAAIC,EAAQnB,EAASA,EAAMkB,GAAS,KAIpC,OAHKC,IACDA,EAAO,CAAEF,MAAKG,SAAS,IAEpBD,MAGVnB,EAGgB,IAAjBA,EAAMT,OACC,wBAAI8B,UAAU,SAAQ,4BAAI,wCAE9B,4BAAKrB,EAAMgB,KAElB,SAAoBG,EAAMG,GACtB,IAAMb,EAAKP,EAAMqB,UAAUJ,EAAKF,KAC1BA,EAAMf,EAAMsB,KAAKvB,EAAU,CAAEQ,OAC7BgB,EAAON,EAAKC,QAAU,MAAQD,EAAKf,GACnCsB,EAAY,CACdC,KAAMV,EACNI,UAAYF,EAAKC,QAAW,eAAYQ,GAE5C,OAAO,wBAAIC,IAAKP,GAAG,sBAAOI,EAAYD,QAf/B,KAmBfV,EAAKe,aAAe,CAChB1B,MAAO,S,gCCxCX,sDAEA,SAAS2B,IACL,OACI,yBAAKV,UAAU,WACX,6BACI,uBAAGA,UAAU,0BADjB","file":"vehicle-page.js","sourcesContent":["import React from 'react';\nimport Relaks, { useProgress } from 'relaks';\nimport { List } from '../widgets/list.jsx';\nimport { Loading } from '../widgets/loading.jsx';\n\nasync function VehiclePage(props) {\n  const { route, swapi } = props;\n  const [ show ] = useProgress();\n\n  render();\n  const vehicle = await swapi.fetchOne(`/vehicles/${route.params.id}/`);\n  render();\n  const films = await swapi.fetchMultiple(vehicle.films, { minimum: '60%' });\n  render();\n  const pilots = await swapi.fetchMultiple(vehicle.pilots, { minimum: '60%' });\n  render();\n\n  function render() {\n    if (!vehicle) {\n      show(<Loading />);\n    } else {\n      show(\n        <div>\n          <h1>{vehicle.name}</h1>\n          <div>Model: {vehicle.model}</div>\n          <div>Manufacturer: {vehicle.manufacturer}</div>\n          <div>Cost in credits: {vehicle.cost_in_credits}</div>\n          <div>Length: {vehicle.length} m</div>\n          <div>Max atmosphering speed: {vehicle.max_atmosphering_speed} km/h</div>\n          <div>Crew: {vehicle.crew}</div>\n          <div>Passengers: {vehicle.passenger}</div>\n          <div>Cargo capacity: {vehicle.cargo_capacity} kg</div>\n          <div>Consumables: {vehicle.consumables}</div>\n          <div>Vehicle class: {vehicle.vehicle_class}</div>\n          <h2>Pilots</h2>\n          <List urls={vehicle.pilots} items={pilots} pageName=\"character-summary\" route={route} />\n          <h2>Films</h2>\n          <List urls={vehicle.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n        </div>\n      );\n    }\n  }\n}\n\nconst component = Relaks.memo(VehiclePage);\n\nexport {\n  component as default,\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List\n};\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}