{"version":3,"sources":["webpack:///./pages/starship-page.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["props","render","a","show","starship","name","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","MGLT","hyperdrive_rating","crew","passenger","cargo_capacity","consumables","starship_class","urls","pilots","items","pageName","route","films","field","swapi","useProgress","fetchOne","params","id","fetchMultiple","minimum","component","Relaks","memo","List","map","url","index","item","pending","className","i","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"qRAKA,WAA4BA,GAA5B,oBAYWC,EAZX,SAAAC,EAAA,6DAYWD,EAZX,WAgBME,EAHGC,EAID,6BACE,4BAAKA,EAASC,MACd,uCAAaD,EAASE,OACtB,8CAAoBF,EAASG,cAC7B,iDAAuBH,EAASI,iBAChC,wCAAcJ,EAASK,OAAvB,MACA,wDAA8BL,EAASM,uBAAvC,SACA,oDAA0BN,EAASO,KAAnC,SACA,mDAAyBP,EAASQ,mBAClC,sCAAYR,EAASS,MACrB,4CAAkBT,EAASU,WAC3B,gDAAsBV,EAASW,eAA/B,OACA,6CAAmBX,EAASY,aAC5B,gDAAsBZ,EAASa,gBAC/B,sCACA,kBAAC,IAAD,CAAMC,KAAMd,EAASe,OAAQC,MAAOD,EAAQE,SAAS,oBAAoBC,MAAOA,IAChF,qCACA,kBAAC,IAAD,CAAMJ,KAAMd,EAASmB,MAAOH,MAAOG,EAAOC,MAAM,QAAQH,SAAS,eAAeC,MAAOA,KApBtF,kBAAC,IAAD,QAbDA,EAAiBtB,EAAjBsB,MAAOG,EAAUzB,EAAVyB,MADjB,EAEmBC,cAFnB,WAEUvB,EAFV,KAIEF,IAJF,SAKyBwB,EAAME,SAAN,qBAA6BL,EAAMM,OAAOC,GAA1C,MALzB,cAKQzB,EALR,OAMEH,IANF,UAOsBwB,EAAMK,cAAc1B,EAASmB,MAAO,CAAEQ,QAAS,QAPrE,eAOQR,EAPR,OAQEtB,IARF,UASuBwB,EAAMK,cAAc1B,EAASe,OAAQ,CAAEY,QAAS,QATvE,QASQZ,EATR,OAUElB,IAVF,6C,sBAyCA,IAAM+B,EAAYC,IAAOC,M,+EC9CzB,sDAEA,SAASC,EAAKnC,GAAO,IACXsB,EAAwCtB,EAAxCsB,MAAOJ,EAAiClB,EAAjCkB,KAAME,EAA2BpB,EAA3BoB,MAAOI,EAAoBxB,EAApBwB,MAAOH,EAAarB,EAAbqB,SAgBjC,OAfIH,IAEqB,iBAAVA,IACPA,EAAO,CAAEA,GACTE,EAAQ,CAAEA,IAGdA,EAAQF,EAAKkB,KAAI,SAACC,EAAKC,GACnB,IAAIC,EAAQnB,EAASA,EAAMkB,GAAS,KAIpC,OAHKC,IACDA,EAAO,CAAEF,MAAKG,SAAS,IAEpBD,MAGVnB,EAGgB,IAAjBA,EAAMX,OACC,wBAAIgC,UAAU,SAAQ,4BAAI,wCAE9B,4BAAKrB,EAAMgB,KAElB,SAAoBG,EAAMG,GACtB,IAAMb,EAAKP,EAAMqB,UAAUJ,EAAKF,KAC1BA,EAAMf,EAAMsB,KAAKvB,EAAU,CAAEQ,OAC7BgB,EAAON,EAAKC,QAAU,MAAQD,EAAKf,GACnCsB,EAAY,CACdC,KAAMV,EACNI,UAAYF,EAAKC,QAAW,eAAYQ,GAE5C,OAAO,wBAAIC,IAAKP,GAAG,sBAAOI,EAAYD,QAf/B,KAmBfV,EAAKe,aAAe,CAChB1B,MAAO,S,gCCxCX,sDAEA,SAAS2B,IACL,OACI,yBAAKV,UAAU,WACX,6BACI,uBAAGA,UAAU,0BADjB","file":"starship-page.js","sourcesContent":["import React from 'react';\nimport Relaks, { useProgress } from 'relaks';\nimport { List } from '../widgets/list.jsx';\nimport { Loading } from '../widgets/loading.jsx';\n\nasync function StarshipPage(props) {\n  const { route, swapi } = props;\n  const [ show ] = useProgress();\n\n  render();\n  const starship = await swapi.fetchOne(`/starships/${route.params.id}/`);\n  render();\n  const films = await swapi.fetchMultiple(starship.films, { minimum: '60%' });\n  render();\n  const pilots = await swapi.fetchMultiple(starship.pilots, { minimum: '60%' });\n  render();\n\n  function render() {\n    if (!starship) {\n      show(<Loading />);\n    } else {\n      show(\n        <div>\n          <h1>{starship.name}</h1>\n          <div>Model: {starship.model}</div>\n          <div>Manufacturer: {starship.manufacturer}</div>\n          <div>Cost in credits: {starship.cost_in_credits}</div>\n          <div>Length: {starship.length} m</div>\n          <div>Max atmosphering speed: {starship.max_atmosphering_speed} km/h</div>\n          <div>Max sublight speed: {starship.MGLT} MGLT</div>\n          <div>Hyperdrive rating: {starship.hyperdrive_rating}</div>\n          <div>Crew: {starship.crew}</div>\n          <div>Passengers: {starship.passenger}</div>\n          <div>Cargo capacity: {starship.cargo_capacity} kg</div>\n          <div>Consumables: {starship.consumables}</div>\n          <div>Starship class: {starship.starship_class}</div>\n          <h2>Pilots</h2>\n          <List urls={starship.pilots} items={pilots} pageName=\"character-summary\" route={route} />\n          <h2>Films</h2>\n          <List urls={starship.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n        </div>\n      );\n    }\n  }\n}\n\nconst component = Relaks.memo(StarshipPage);\n\nexport {\n  component as default,\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List\n};\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}