{"version":3,"sources":["webpack:////home/cleong/relaks/index.js","webpack:///./pages/starship-page.jsx","webpack:///./widgets/loading.jsx","webpack:///./widgets/list.jsx"],"names":["_options__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_hooks__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","get","set","plant","use","memo","_callee","props","route","swapi","_useProgress","_useProgress2","show","starship","films","pilots","render","babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","name","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","MGLT","hyperdrive_rating","crew","passenger","cargo_capacity","consumables","starship_class","widgets_list__WEBPACK_IMPORTED_MODULE_6__","urls","items","pageName","field","widgets_loading__WEBPACK_IMPORTED_MODULE_7__","useProgress","babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","fetchOne","params","id","sent","fetchMultiple","minimum","stop","this","component","Relaks","StarshipPage","d","Loading","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","className","List","map","url","index","item","pending","i","extractID","find","text","linkProps","href","undefined","key","defaultProps"],"mappings":"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","file":"starship-page.js","sourcesContent":["import { get, set, plant } from './options';\nimport { use, memo } from './hooks';\n\nexport default {\n\tget: get,\n\tset: set,\n\tplant: plant,\n\n\tuse: use,\n\tmemo: memo,\t\n};\n\nexport * from './options';\nexport * from './class';\nexport * from './hooks';\nexport * from './async-rendering-cycle';\nexport * from './async-rendering-interrupted';\nexport * from './async-save-buffer';\n","import React from 'react';\nimport Relaks, { useProgress } from 'relaks';\nimport { List } from 'widgets/list';\nimport { Loading } from 'widgets/loading';\n\nasync function StarshipPage(props) {\n    const { route, swapi } = props;\n    const [ show ] = useProgress();\n\n    render();\n    const starship = await swapi.fetchOne(`/starships/${route.params.id}/`);\n    render();\n    const films = await swapi.fetchMultiple(starship.films, { minimum: '60%' });\n    render();\n    const pilots = await swapi.fetchMultiple(starship.pilots, { minimum: '60%' });\n    render();\n\n    function render() {\n        if (!starship) {\n            show(<Loading />);\n        } else {\n            show(\n                <div>\n                    <h1>{starship.name}</h1>\n                    <div>Model: {starship.model}</div>\n                    <div>Manufacturer: {starship.manufacturer}</div>\n                    <div>Cost in credits: {starship.cost_in_credits}</div>\n                    <div>Length: {starship.length} m</div>\n                    <div>Max atmosphering speed: {starship.max_atmosphering_speed} km/h</div>\n                    <div>Max sublight speed: {starship.MGLT} MGLT</div>\n                    <div>Hyperdrive rating: {starship.hyperdrive_rating}</div>\n                    <div>Crew: {starship.crew}</div>\n                    <div>Passengers: {starship.passenger}</div>\n                    <div>Cargo capacity: {starship.cargo_capacity} kg</div>\n                    <div>Consumables: {starship.consumables}</div>\n                    <div>Starship class: {starship.starship_class}</div>\n                    <h2>Pilots</h2>\n                    <List urls={starship.pilots} items={pilots} pageName=\"character-summary\" route={route} />\n                    <h2>Films</h2>\n                    <List urls={starship.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n                </div>\n            );\n        }\n    }\n}\n\nconst component = Relaks.memo(StarshipPage);\n\nexport {\n    component as default,\n};\n","import React, { Component } from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List\n};\n"],"sourceRoot":""}