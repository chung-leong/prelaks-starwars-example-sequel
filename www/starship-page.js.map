{"version":3,"sources":["webpack:///./pages/starship-page.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["_callee","props","route","swapi","_useProgress","_useProgress2","show","starship","films","pilots","render","_regenerator2","default","wrap","_context","prev","next","_react2","createElement","name","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","MGLT","hyperdrive_rating","crew","passenger","cargo_capacity","consumables","starship_class","_list","List","urls","items","pageName","field","_loading2","_hooks","useProgress","_slicedToArray3","fetchOne","params","id","sent","fetchMultiple","minimum","stop","this","__webpack_require__","asyncComponent","_hooks2","StarshipPage","_react","map","url","index","item","pending","className","i","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"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","file":"starship-page.js","sourcesContent":["import React, { Component } from 'react';\nimport Relaks, { useProgress } from 'relaks/hooks';\nimport { List } from 'widgets/list';\nimport Loading from 'widgets/loading';\n\nasync function StarshipPage(props) {\n    const { route, swapi } = props;\n    const [ show ] = useProgress();\n\n    render();\n    const starship = await swapi.fetchOne(`/starships/${route.params.id}/`);\n    render();\n    const films = await swapi.fetchMultiple(starship.films, { minimum: '60%' });\n    render();\n    const pilots = await swapi.fetchMultiple(starship.pilots, { minimum: '60%' });\n    render();\n\n    function render() {\n        if (!starship) {\n            show(<Loading />);\n        } else {\n            show(\n                <div>\n                    <h1>{starship.name}</h1>\n                    <div>Model: {starship.model}</div>\n                    <div>Manufacturer: {starship.manufacturer}</div>\n                    <div>Cost in credits: {starship.cost_in_credits}</div>\n                    <div>Length: {starship.length} m</div>\n                    <div>Max atmosphering speed: {starship.max_atmosphering_speed} km/h</div>\n                    <div>Max sublight speed: {starship.MGLT} MGLT</div>\n                    <div>Hyperdrive rating: {starship.hyperdrive_rating}</div>\n                    <div>Crew: {starship.crew}</div>\n                    <div>Passengers: {starship.passenger}</div>\n                    <div>Cargo capacity: {starship.cargo_capacity} kg</div>\n                    <div>Consumables: {starship.consumables}</div>\n                    <div>Starship class: {starship.starship_class}</div>\n                    <h2>Pilots</h2>\n                    <List urls={starship.pilots} items={pilots} pageName=\"character-summary\" route={route} />\n                    <h2>Films</h2>\n                    <List urls={starship.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n                </div>\n            );\n        }\n    }\n}\n\nconst asyncComponent = Relaks(StarshipPage);\n\nexport {\n    asyncComponent as default,\n    asyncComponent as StarshipPage,\n};\n","import React, { Component } from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List as default,\n    List\n};\n","import React, { Component } from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}