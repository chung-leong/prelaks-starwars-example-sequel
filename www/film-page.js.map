{"version":3,"sources":["webpack:////home/cleong/relaks/index.js","webpack:///./pages/film-page.jsx","webpack:///./widgets/loading.jsx","webpack:///./widgets/list.jsx"],"names":["_options__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_hooks__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","get","set","plant","use","memo","_callee","props","route","swapi","_useProgress","_useProgress2","show","film","characters","species","planets","vehicles","starships","render","babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","title","opening_crawl","director","producer","release_date","widgets_list__WEBPACK_IMPORTED_MODULE_6__","urls","items","pageName","widgets_loading__WEBPACK_IMPORTED_MODULE_7__","useProgress","babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","fetchOne","params","id","sent","fetchMultiple","minimum","stop","this","component","Relaks","FilmPage","d","Loading","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","className","List","field","map","url","index","item","pending","length","i","extractID","find","text","linkProps","href","undefined","key","defaultProps"],"mappings":"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","file":"film-page.js","sourcesContent":["import { get, set, plant } from './options';\nimport { use, memo } from './hooks';\n\nexport default {\n\tget: get,\n\tset: set,\n\tplant: plant,\n\n\tuse: use,\n\tmemo: memo,\t\n};\n\nexport * from './options';\nexport * from './class';\nexport * from './hooks';\nexport * from './async-rendering-cycle';\nexport * from './async-rendering-interrupted';\nexport * from './async-save-buffer';\n","import React from 'react';\nimport Relaks, { useProgress } from 'relaks';\nimport { List } from 'widgets/list';\nimport { Loading } from 'widgets/loading';\n\nasync function FilmPage(props) {\n    const { route, swapi } = props;\n    const [ show ] = useProgress();\n\n    render();\n    const film = await swapi.fetchOne(`/films/${route.params.id}/`);\n    render();\n    const characters = await swapi.fetchMultiple(film.characters, { minimum: 5 });\n    render();\n    const species = await swapi.fetchMultiple(film.species, { minimum: '60%' });\n    render();\n    const planets = await swapi.fetchMultiple(film.planets);\n    render();\n    const vehicles = await swapi.fetchMultiple(film.vehicles, { minimum: '60%' });\n    render();\n    const starships = await swapi.fetchMultiple(film.starships, { minimum: '60%' });\n    render();\n\n    function render() {\n        if (!film) {\n            show(<Loading />);\n        } else {\n            show(\n                <div>\n                    <h1>{film.title}</h1>\n                    <p>{film.opening_crawl}</p>\n                    <div>Director: {film.director}</div>\n                    <div>Producer: {film.producer}</div>\n                    <div>Release date: {film.release_date}</div>\n                    <h2>Characters</h2>\n                    <List urls={film.characters} items={characters} pageName=\"character-summary\" route={route} />\n                    <h2>Species</h2>\n                    <List urls={film.species} items={species} pageName=\"species-summary\" route={route} />\n                    <h2>Planets</h2>\n                    <List urls={film.planets} items={planets} pageName=\"planet-summary\" route={route} />\n                    <h2>Vehicles</h2>\n                    <List urls={film.vehicles} items={vehicles} pageName=\"vehicle-summary\" route={route} />\n                    <h2>Starships</h2>\n                    <List urls={film.starships} items={starships} pageName=\"starship-summary\" route={route} />\n                </div>\n            );\n        }\n    }\n}\n\nconst component = Relaks.memo(FilmPage);\n\nexport {\n    component as default,\n};\n","import React, { Component } from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List\n};\n"],"sourceRoot":""}