{"version":3,"sources":["webpack:///./pages/film-page.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["_callee","props","route","swapi","_useProgress","_useProgress2","show","film","characters","species","planets","vehicles","starships","render","_regenerator2","default","wrap","_context","prev","next","_react2","createElement","title","opening_crawl","director","producer","release_date","_list","List","urls","items","pageName","_loading2","_hooks","useProgress","_slicedToArray3","fetchOne","params","id","sent","fetchMultiple","minimum","stop","this","__webpack_require__","asyncComponent","_hooks2","FilmPage","_react","field","map","url","index","item","pending","length","className","i","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"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","file":"film-page.js","sourcesContent":["import React, { Component } from 'react';\nimport Relaks, { useProgress } from 'relaks/hooks';\nimport { List } from 'widgets/list';\nimport Loading from 'widgets/loading';\n\nasync function FilmPage(props) {\n    const { route, swapi } = props;\n    const [ show ] = useProgress();\n\n    render();\n    const film = await swapi.fetchOne(`/films/${route.params.id}/`);\n    render();\n    const characters = await swapi.fetchMultiple(film.characters, { minimum: 5 });\n    render();\n    const species = await swapi.fetchMultiple(film.species, { minimum: '60%' });\n    render();\n    const planets = await swapi.fetchMultiple(film.planets);\n    render();\n    const vehicles = await swapi.fetchMultiple(film.vehicles, { minimum: '60%' });\n    render();\n    const starships = await swapi.fetchMultiple(film.starships, { minimum: '60%' });\n    render();\n\n    function render() {\n        if (!film) {\n            show(<Loading />);\n        } else {\n            show(\n                <div>\n                    <h1>{film.title}</h1>\n                    <p>{film.opening_crawl}</p>\n                    <div>Director: {film.director}</div>\n                    <div>Producer: {film.producer}</div>\n                    <div>Release date: {film.release_date}</div>\n                    <h2>Characters</h2>\n                    <List urls={film.characters} items={characters} pageName=\"character-summary\" route={route} />\n                    <h2>Species</h2>\n                    <List urls={film.species} items={species} pageName=\"species-summary\" route={route} />\n                    <h2>Planets</h2>\n                    <List urls={film.planets} items={planets} pageName=\"planet-summary\" route={route} />\n                    <h2>Vehicles</h2>\n                    <List urls={film.vehicles} items={vehicles} pageName=\"vehicle-summary\" route={route} />\n                    <h2>Starships</h2>\n                    <List urls={film.starships} items={starships} pageName=\"starship-summary\" route={route} />\n                </div>\n            );\n        }\n    }\n}\n\nconst asyncComponent = Relaks(FilmPage);\n\nexport {\n    asyncComponent as default,\n    asyncComponent as FilmPage,\n};\n","import React, { Component } from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List as default,\n    List\n};\n","import React, { Component } from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}