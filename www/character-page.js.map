{"version":3,"sources":["webpack:///./pages/character-page.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["props","render","a","show","person","name","height","mass","hair_color","skin_color","eye_color","birth_year","urls","homeworld","items","pageName","route","films","field","species","vehicles","starships","swapi","useProgress","fetchOne","params","id","fetchMultiple","minimum","component","Relaks","memo","List","map","url","index","item","pending","length","className","i","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"sRAKA,WAA6BA,GAA7B,0BAkBWC,EAlBX,SAAAC,EAAA,6DAkBWD,EAlBX,WAsBME,EAHGC,EAID,6BACE,4BAAKA,EAAOC,MACZ,wCAAcD,EAAOE,OAArB,OACA,sCAAYF,EAAOG,KAAnB,OACA,4CAAkBH,EAAOI,YACzB,4CAAkBJ,EAAOK,YACzB,4CAAkBL,EAAOI,YACzB,2CAAiBJ,EAAOM,WACxB,4CAAkBN,EAAOO,YACzB,yCACA,kBAAC,IAAD,CAAMC,KAAMR,EAAOS,UAAWC,MAAOD,EAAWE,SAAS,iBAAiBC,MAAOA,IACjF,qCACA,kBAAC,IAAD,CAAMJ,KAAMR,EAAOa,MAAOH,MAAOG,EAAOC,MAAM,QAAQH,SAAS,eAAeC,MAAOA,IACrF,uCACA,kBAAC,IAAD,CAAMJ,KAAMR,EAAOe,QAASL,MAAOK,EAASJ,SAAS,kBAAkBC,MAAOA,IAC9E,wCACA,kBAAC,IAAD,CAAMJ,KAAMR,EAAOgB,SAAUN,MAAOM,EAAUL,SAAS,kBAAkBC,MAAOA,IAChF,yCACA,kBAAC,IAAD,CAAMJ,KAAMR,EAAOiB,UAAWP,MAAOO,EAAWN,SAAS,mBAAmBC,MAAOA,KArBlF,kBAAC,IAAD,QAnBDA,EAAiBhB,EAAjBgB,MAAOM,EAAUtB,EAAVsB,MADjB,EAEmBC,cAFnB,WAEUpB,EAFV,KAIEF,IAJF,SAKuBqB,EAAME,SAAN,kBAA0BR,EAAMS,OAAOC,GAAvC,MALvB,cAKQtB,EALR,OAMEH,IANF,UAOsBqB,EAAMK,cAAcvB,EAAOa,MAAO,CAAEW,QAAS,QAPnE,eAOQX,EAPR,OAQEhB,IARF,UASwBqB,EAAMK,cAAcvB,EAAOe,QAAS,CAAES,QAAS,QATvE,eASQT,EATR,OAUElB,IAVF,UAW0BqB,EAAME,SAASpB,EAAOS,WAXhD,eAWQA,EAXR,OAYEZ,IAZF,UAayBqB,EAAMK,cAAcvB,EAAOgB,SAAU,CAAEQ,QAAS,QAbzE,eAaQR,EAbR,OAcEnB,IAdF,UAe0BqB,EAAMK,cAAcvB,EAAOiB,UAAW,CAAEO,QAAS,QAf3E,QAeQP,EAfR,OAgBEpB,IAhBF,6C,sBAgDA,IAAM4B,EAAYC,IAAOC,M,+ECrDzB,sDAEA,SAASC,EAAKhC,GAAO,IACXgB,EAAwChB,EAAxCgB,MAAOJ,EAAiCZ,EAAjCY,KAAME,EAA2Bd,EAA3Bc,MAAOI,EAAoBlB,EAApBkB,MAAOH,EAAaf,EAAbe,SAgBjC,OAfIH,IAEqB,iBAAVA,IACPA,EAAO,CAAEA,GACTE,EAAQ,CAAEA,IAGdA,EAAQF,EAAKqB,KAAI,SAACC,EAAKC,GACnB,IAAIC,EAAQtB,EAASA,EAAMqB,GAAS,KAIpC,OAHKC,IACDA,EAAO,CAAEF,MAAKG,SAAS,IAEpBD,MAGVtB,EAGgB,IAAjBA,EAAMwB,OACC,wBAAIC,UAAU,SAAQ,4BAAI,wCAE9B,4BAAKzB,EAAMmB,KAElB,SAAoBG,EAAMI,GACtB,IAAMd,EAAKV,EAAMyB,UAAUL,EAAKF,KAC1BA,EAAMlB,EAAM0B,KAAK3B,EAAU,CAAEW,OAC7BiB,EAAOP,EAAKC,QAAU,MAAQD,EAAKlB,GACnC0B,EAAY,CACdC,KAAMX,EACNK,UAAYH,EAAKC,QAAW,eAAYS,GAE5C,OAAO,wBAAIC,IAAKP,GAAG,sBAAOI,EAAYD,QAf/B,KAmBfX,EAAKgB,aAAe,CAChB9B,MAAO,S,gCCxCX,sDAEA,SAAS+B,IACL,OACI,yBAAKV,UAAU,WACX,6BACI,uBAAGA,UAAU,0BADjB","file":"character-page.js","sourcesContent":["import React from 'react';\nimport Relaks, { useProgress } from 'relaks';\nimport { List } from '../widgets/list.jsx';\nimport { Loading } from '../widgets/loading.jsx';\n\nasync function CharacterPage(props) {\n  const { route, swapi } = props;\n  const [ show ] = useProgress();\n\n  render();\n  const person = await swapi.fetchOne(`/people/${route.params.id}/`);\n  render();\n  const films = await swapi.fetchMultiple(person.films, { minimum: '60%' });\n  render();\n  const species = await swapi.fetchMultiple(person.species, { minimum: '60%' });\n  render();\n  const homeworld = await swapi.fetchOne(person.homeworld);\n  render();\n  const vehicles = await swapi.fetchMultiple(person.vehicles, { minimum: '60%' });\n  render();\n  const starships = await swapi.fetchMultiple(person.starships, { minimum: '60%' });\n  render();\n\n  function render() {\n    if (!person) {\n      show(<Loading />);\n    } else {\n      show(\n        <div>\n          <h1>{person.name}</h1>\n          <div>Height: {person.height} cm</div>\n          <div>Mass: {person.mass} kg</div>\n          <div>Hair color: {person.hair_color}</div>\n          <div>Skin color: {person.skin_color}</div>\n          <div>Hair color: {person.hair_color}</div>\n          <div>Eye color: {person.eye_color}</div>\n          <div>Birth year: {person.birth_year}</div>\n          <h2>Homeworld</h2>\n          <List urls={person.homeworld} items={homeworld} pageName=\"planet-summary\" route={route} />\n          <h2>Films</h2>\n          <List urls={person.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n          <h2>Species</h2>\n          <List urls={person.species} items={species} pageName=\"species-summary\" route={route} />\n          <h2>Vehicles</h2>\n          <List urls={person.vehicles} items={vehicles} pageName=\"vehicle-summary\" route={route} />\n          <h2>Starships</h2>\n          <List urls={person.starships} items={starships} pageName=\"starship-summary\" route={route} />\n        </div>\n      );\n    }\n  }\n}\n\nconst component = Relaks.memo(CharacterPage);\n\nexport {\n  component as default,\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List\n};\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}