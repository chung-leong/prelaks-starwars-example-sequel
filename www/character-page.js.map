{"version":3,"sources":["webpack:///./pages/character-page.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["_preact","__webpack_require__","_preact2","_list","CharacterPage","meanwhile","this","props","route","swapi","show","h","CharacterPageSync","fetchOne","params","id","person","fetchMultiple","films","minimum","species","homeworld","vehicles","starships","AsyncComponent","displayName","_props2","className","name","height","mass","hair_color","skin_color","eye_color","birth_year","List","urls","items","pageName","field","_loading2","default","Component","map","url","index","item","pending","length","extractID","find","text","linkProps","href","undefined","defaultProps","Loading"],"mappings":"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","file":"character-page.js","sourcesContent":["import { h, Component } from 'preact';\nimport { AsyncComponent } from 'relaks/preact';\nimport { List } from 'widgets/list';\nimport Loading from 'widgets/loading';\n\n/** @jsx h */\n\nclass CharacterPage extends AsyncComponent {\n    static displayName = 'CharacterPage';\n\n    /**\n     * Retrieve remote data and render the synchronize half of this component\n     *\n     * @param  {Meanwhile}  meanwhile\n     *\n     * @return {VNode}\n     */\n    async renderAsync(meanwhile) {\n        let { route, swapi } = this.props;\n        let props = {\n            route,\n        };\n        meanwhile.show(<CharacterPageSync {...props} />);\n        props.person = await swapi.fetchOne(`/people/${route.params.id}/`);\n        meanwhile.show(<CharacterPageSync {...props} />);\n        props.films = await swapi.fetchMultiple(props.person.films, { minimum: '60%' });\n        meanwhile.show(<CharacterPageSync {...props} />);\n        props.species = await swapi.fetchMultiple(props.person.species, { minimum: '60%' });\n        meanwhile.show(<CharacterPageSync {...props} />);\n        props.homeworld = await swapi.fetchOne(props.person.homeworld);\n        meanwhile.show(<CharacterPageSync {...props} />);\n        props.vehicles = await swapi.fetchMultiple(props.person.vehicles, { minimum: '60%' });\n        meanwhile.show(<CharacterPageSync {...props} />);\n        props.starships = await swapi.fetchMultiple(props.person.starships, { minimum: '60%' });\n        meanwhile.show(<CharacterPageSync {...props} />);\n        return <CharacterPageSync {...props} />;\n    }\n}\n\nclass CharacterPageSync extends Component {\n    static displayName = 'CharacterPageSync';\n\n    /**\n     * Render the component, making best effort using what props are given\n     *\n     * @return {VNode}\n     */\n    render() {\n        let { route, person, homeworld, films, species, vehicles, starships } = this.props;\n        if (!person) {\n            return <Loading />;\n        }\n        return (\n            <div className=\"character-page\">\n                <h1>{person.name}</h1>\n                <div>Height: {person.height} cm</div>\n                <div>Mass: {person.mass} kg</div>\n                <div>Hair color: {person.hair_color}</div>\n                <div>Skin color: {person.skin_color}</div>\n                <div>Hair color: {person.hair_color}</div>\n                <div>Eye color: {person.eye_color}</div>\n                <div>Birth year: {person.birth_year}</div>\n                <h2>Homeworld</h2>\n                <List urls={person.homeworld} items={homeworld} pageName=\"planet-summary\" route={route} />\n                <h2>Films</h2>\n                <List urls={person.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n                <h2>Species</h2>\n                <List urls={person.species} items={species} pageName=\"species-summary\" route={route} />\n                <h2>Vehicles</h2>\n                <List urls={person.vehicles} items={vehicles} pageName=\"vehicle-summary\" route={route} />\n                <h2>Starships</h2>\n                <List urls={person.starships} items={starships} pageName=\"starship-summary\" route={route} />\n            </div>\n        );\n    }\n}\n\nexport {\n    CharacterPage as default,\n    CharacterPage,\n    CharacterPageSync,\n};\n","import { h, Component } from 'preact';\n\n/** @jsx h */\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return (\n        <ul>\n        {\n            items.map((item) => {\n                let id = route.extractID(item.url);\n                let url = route.find(pageName, { id });\n                let text = item.pending ? '...' : item[field];\n                let linkProps = {\n                    href: url,\n                    className: (item.pending) ? 'pending' : undefined,\n                };\n                return <li><a {...linkProps}>{text}</a></li>;\n            })\n        }\n        </ul>\n    );\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nList.displayName = 'List';\n\nexport {\n    List as default,\n    List\n};\n","import { h, Component } from 'preact';\n\n/** @jsx h */\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nLoading.displayName = 'Loading';\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}