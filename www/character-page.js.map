{"version":3,"sources":["webpack:///../node_modules/relaks/index.js","webpack:///./pages/character-page.jsx","webpack:///./widgets/loading.jsx","webpack:///./widgets/list.jsx"],"names":["_options__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_hooks__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","get","set","plant","use","memo","_callee","props","route","swapi","_useProgress","_useProgress2","show","person","films","species","homeworld","vehicles","starships","render","babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","name","height","mass","hair_color","skin_color","eye_color","birth_year","widgets_list__WEBPACK_IMPORTED_MODULE_6__","urls","items","pageName","field","widgets_loading__WEBPACK_IMPORTED_MODULE_7__","useProgress","babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","fetchOne","params","id","sent","fetchMultiple","minimum","stop","this","component","Relaks","CharacterPage","d","Loading","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","className","List","map","url","index","item","pending","length","i","extractID","find","text","linkProps","href","undefined","key","defaultProps"],"mappings":"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","file":"character-page.js","sourcesContent":["import { get, set, plant } from './options';\nimport { use, memo } from './hooks';\n\nexport default {\n\tget: get,\n\tset: set,\n\tplant: plant,\n\n\tuse: use,\n\tmemo: memo,\n};\n\nexport * from './options';\nexport * from './class';\nexport * from './hooks';\nexport * from './async-rendering-cycle';\nexport * from './async-rendering-interrupted';\nexport * from './async-save-buffer';\nexport * from './sticky-selection';\n","import React from 'react';\nimport Relaks, { useProgress } from 'relaks';\nimport { List } from 'widgets/list';\nimport { Loading } from 'widgets/loading';\n\nasync function CharacterPage(props) {\n    const { route, swapi } = props;\n    const [ show ] = useProgress();\n\n    render();\n    const person = await swapi.fetchOne(`/people/${route.params.id}/`);\n    render();\n    const films = await swapi.fetchMultiple(person.films, { minimum: '60%' });\n    render();\n    const species = await swapi.fetchMultiple(person.species, { minimum: '60%' });\n    render();\n    const homeworld = await swapi.fetchOne(person.homeworld);\n    render();\n    const vehicles = await swapi.fetchMultiple(person.vehicles, { minimum: '60%' });\n    render();\n    const starships = await swapi.fetchMultiple(person.starships, { minimum: '60%' });\n    render();\n\n    function render() {\n        if (!person) {\n            show(<Loading />);\n        } else {\n            show(\n                <div>\n                    <h1>{person.name}</h1>\n                    <div>Height: {person.height} cm</div>\n                    <div>Mass: {person.mass} kg</div>\n                    <div>Hair color: {person.hair_color}</div>\n                    <div>Skin color: {person.skin_color}</div>\n                    <div>Hair color: {person.hair_color}</div>\n                    <div>Eye color: {person.eye_color}</div>\n                    <div>Birth year: {person.birth_year}</div>\n                    <h2>Homeworld</h2>\n                    <List urls={person.homeworld} items={homeworld} pageName=\"planet-summary\" route={route} />\n                    <h2>Films</h2>\n                    <List urls={person.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n                    <h2>Species</h2>\n                    <List urls={person.species} items={species} pageName=\"species-summary\" route={route} />\n                    <h2>Vehicles</h2>\n                    <List urls={person.vehicles} items={vehicles} pageName=\"vehicle-summary\" route={route} />\n                    <h2>Starships</h2>\n                    <List urls={person.starships} items={starships} pageName=\"starship-summary\" route={route} />\n                </div>\n            );\n        }\n    }\n}\n\nconst component = Relaks.memo(CharacterPage);\n\nexport {\n    component as default,\n};\n","import React, { Component } from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List\n};\n"],"sourceRoot":""}