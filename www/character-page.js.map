{"version":3,"sources":["webpack:///./pages/character-page.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["_callee","props","route","swapi","_useProgress","_useProgress2","show","person","films","species","homeworld","vehicles","starships","render","_regenerator2","default","wrap","_context","prev","next","_react2","createElement","name","height","mass","hair_color","skin_color","eye_color","birth_year","_list","List","urls","items","pageName","field","_loading2","_hooks","useProgress","_slicedToArray3","fetchOne","params","id","sent","fetchMultiple","minimum","stop","this","__webpack_require__","CharacterPage","displayName","asyncComponent","_hooks2","_react","map","url","index","item","pending","length","className","i","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"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","file":"character-page.js","sourcesContent":["import React, { Component } from 'react';\nimport Relaks, { useProgress } from 'relaks/hooks';\nimport { List } from 'widgets/list';\nimport Loading from 'widgets/loading';\n\nasync function CharacterPage(props) {\n    const { route, swapi } = props;\n    const [ show ] = useProgress();\n\n    render();\n    const person = await swapi.fetchOne(`/people/${route.params.id}/`);\n    render();\n    const films = await swapi.fetchMultiple(person.films, { minimum: '60%' });\n    render();\n    const species = await swapi.fetchMultiple(person.species, { minimum: '60%' });\n    render();\n    const homeworld = await swapi.fetchOne(person.homeworld);\n    render();\n    const vehicles = await swapi.fetchMultiple(person.vehicles, { minimum: '60%' });\n    render();\n    const starships = await swapi.fetchMultiple(person.starships, { minimum: '60%' });\n    render();\n\n    function render() {\n        if (!person) {\n            show(<Loading />);\n        } else {\n            show(\n                <div>\n                    <h1>{person.name}</h1>\n                    <div>Height: {person.height} cm</div>\n                    <div>Mass: {person.mass} kg</div>\n                    <div>Hair color: {person.hair_color}</div>\n                    <div>Skin color: {person.skin_color}</div>\n                    <div>Hair color: {person.hair_color}</div>\n                    <div>Eye color: {person.eye_color}</div>\n                    <div>Birth year: {person.birth_year}</div>\n                    <h2>Homeworld</h2>\n                    <List urls={person.homeworld} items={homeworld} pageName=\"planet-summary\" route={route} />\n                    <h2>Films</h2>\n                    <List urls={person.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n                    <h2>Species</h2>\n                    <List urls={person.species} items={species} pageName=\"species-summary\" route={route} />\n                    <h2>Vehicles</h2>\n                    <List urls={person.vehicles} items={vehicles} pageName=\"vehicle-summary\" route={route} />\n                    <h2>Starships</h2>\n                    <List urls={person.starships} items={starships} pageName=\"starship-summary\" route={route} />\n                </div>\n            );\n        }\n    }\n}\n\n// set display name so it appears in React Dev Console when code is uglified\nCharacterPage.displayName = 'CharacterPage';\n\nconst asyncComponent = Relaks(CharacterPage);\n\nexport {\n    asyncComponent as default,\n    asyncComponent as CharacterPage,\n};\n","import React, { Component } from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\n// set display name so it appears in React Dev Console when code is uglified\nList.displayName = 'List';\n\nexport {\n    List as default,\n    List\n};\n","import React, { Component } from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\n// set display name so it appears in React Dev Console when code is uglified\nLoading.displayName = 'Loading';\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}