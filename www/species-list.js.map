{"version":3,"sources":["webpack:///./pages/species-list.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["_callee","props","route","swapi","_useProgress","_useProgress2","show","species","render","_regenerator2","default","wrap","_context","prev","next","_react2","createElement","_list2","items","field","pageName","_loading2","_hooks","useProgress","_slicedToArray3","fetchList","sent","more","stop","this","__webpack_require__","asyncComponent","_hooks2","SpeciesList","_react","List","urls","map","url","index","item","pending","length","className","i","id","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"gQAKA,SAAAA,EAA2BC,GAA3B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAUaC,EAVb,OAAAC,EAAAC,QAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAUaN,EAVb,WAcYF,EAHCC,EAIGQ,EAAAL,QAAAM,cAAA,WACID,EAAAL,QAAAM,cAAA,qBACAD,EAAAL,QAAAM,cAACC,EAAAP,QAAD,CAAMQ,MAAOX,EAASY,MAAM,OAAOC,SAAS,kBAAkBlB,MAAOA,KALxEa,EAAAL,QAAAM,cAACK,EAAAX,QAAD,QAXLR,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MADnBC,GAEqB,EAAAkB,EAAAC,eAFrBlB,GAAA,EAAAmB,EAAAd,SAAAN,EAAA,GAEYE,EAFZD,EAAA,GAIIG,IAJJI,EAAAE,KAAA,EAK0BX,EAAMsB,UAAU,aAL1C,OAKUlB,EALVK,EAAAc,KAMIlB,IAEAD,EAAQoB,OARZ,wBAAAf,EAAAgB,SAAA5B,EAAA6B,0DALAC,EAAA,IACAR,EAAAQ,EAAA,eACAA,EAAA,UACAA,EAAA,yDA0BA,IAAMC,GAAiB,EAAAC,EAAAtB,SAAOuB,KAGRvB,QAAlBqB,IACkBE,YAAlBF,6GCjCJ,MAAAG,EAAAJ,EAAA,uCAEA,SAASK,EAAKlC,GAAO,IACXC,EAAwCD,EAAxCC,MAAOkC,EAAiCnC,EAAjCmC,KAAMlB,EAA2BjB,EAA3BiB,MAAOC,EAAoBlB,EAApBkB,MAAOC,EAAanB,EAAbmB,SAgBjC,OAfIgB,IAEqB,iBAAVA,IACPA,EAAO,CAAEA,GACTlB,EAAQ,CAAEA,IAGdA,EAAQkB,EAAKC,IAAI,SAACC,EAAKC,GACnB,IAAIC,EAAQtB,EAASA,EAAMqB,GAAS,KAIpC,OAHKC,IACDA,EAAO,CAAEF,MAAKG,SAAS,IAEpBD,KAGVtB,EAGgB,IAAjBA,EAAMwB,OACC3B,EAAAL,QAAAM,cAAA,MAAI2B,UAAU,SAAQ5B,EAAAL,QAAAM,cAAA,UAAID,EAAAL,QAAAM,cAAA,sBAE9BD,EAAAL,QAAAM,cAAA,UAAKE,EAAMmB,IAElB,SAAoBG,EAAMI,GACtB,IAAMC,EAAK3C,EAAM4C,UAAUN,EAAKF,KAC1BA,EAAMpC,EAAM6C,KAAK3B,EAAU,CAAEyB,OAC7BG,EAAOR,EAAKC,QAAU,MAAQD,EAAKrB,GACnC8B,EAAY,CACdC,KAAMZ,EACNK,UAAYH,EAAKC,QAAW,eAAYU,GAE5C,OAAOpC,EAAAL,QAAAM,cAAA,MAAIoC,IAAKR,GAAG7B,EAAAL,QAAAM,cAAA,IAAOiC,EAAYD,OAf/B,KAmBfb,EAAKkB,aAAe,CAChBlC,MAAO,UAICT,QAARyB,IACAA,qHC7CJ,MAAAD,EAAAJ,EAAA,uCAEA,SAASwB,IACL,OACIvC,EAAAL,QAAAM,cAAA,OAAK2B,UAAU,WACX5B,EAAAL,QAAAM,cAAA,WACID,EAAAL,QAAAM,cAAA,KAAG2B,UAAU,0BADjB,eAQGjC,QAAX4C,IACAA","file":"species-list.js","sourcesContent":["import React from 'react';\nimport Relaks, { useProgress } from 'relaks/hooks';\nimport List from 'widgets/list';\nimport Loading from 'widgets/loading';\n\nasync function SpeciesList(props) {\n    const { route, swapi } = props;\n    const [ show ] = useProgress();\n\n    render();\n    const species = await swapi.fetchList('/species/');\n    render();\n\n    species.more();\n\n    function render() {\n        if (!species) {\n            show(<Loading />);\n        } else {\n            show(\n                <div>\n                    <h1>Species</h1>\n                    <List items={species} field=\"name\" pageName=\"species-summary\" route={route} />\n                </div>\n            );\n        }\n    }\n}\n\nconst asyncComponent = Relaks(SpeciesList);\n\nexport {\n    asyncComponent as default,\n    asyncComponent as SpeciesList,\n};\n","import React, { Component } from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List as default,\n    List\n};\n","import React, { Component } from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}