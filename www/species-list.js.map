{"version":3,"sources":["webpack:////home/cleong/relaks/index.js","webpack:///./pages/species-list.jsx","webpack:///./widgets/loading.jsx","webpack:///./widgets/list.jsx"],"names":["_options__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_hooks__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","get","set","plant","use","memo","_callee","props","route","swapi","_useProgress","_useProgress2","show","species","render","babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","widgets_list__WEBPACK_IMPORTED_MODULE_6__","items","field","pageName","widgets_loading__WEBPACK_IMPORTED_MODULE_7__","useProgress","babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","fetchList","sent","more","stop","this","component","Relaks","SpeciesList","d","Loading","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","className","List","urls","map","url","index","item","pending","length","i","id","extractID","find","text","linkProps","href","undefined","key","defaultProps"],"mappings":"uGAAA,IAAAA,EAAAC,EAAA,IAAAC,EAAAD,EAAA,IAGeE,EAAA,GACdC,IAAKA,IACLC,IAAKA,IACLC,MAAOA,IAEPC,IAAKA,IACLC,KAAMA,gNCJP,SAAAC,EAA2BC,GAA3B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAUaC,EAVb,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAUaN,EAVb,WAcYF,EAHCC,EAIGQ,EAAAL,EAAAM,cAAA,WACID,EAAAL,EAAAM,cAAA,qBACAD,EAAAL,EAAAM,cAACC,EAAA,EAAD,CAAMC,MAAOX,EAASY,MAAM,OAAOC,SAAS,kBAAkBlB,MAAOA,KALxEa,EAAAL,EAAAM,cAACK,EAAA,EAAD,QAXLnB,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MADnBC,EAEqBkB,cAFrBjB,EAAAkB,IAAAnB,EAAA,GAEYE,EAFZD,EAAA,GAIIG,IAJJI,EAAAE,KAAA,EAK0BX,EAAMqB,UAAU,aAL1C,OAKUjB,EALVK,EAAAa,KAMIjB,IAEAD,EAAQmB,OARZ,wBAAAd,EAAAe,SAAA3B,EAAA4B,sDAwBMC,EAAYC,IAAO/B,KAAKgC,qCC7B9BvC,EAAAwC,EAAAtC,EAAA,sBAAAuC,IAAA,IAAAC,EAAA1C,EAAA,GAAA2C,EAAA3C,EAAA4C,EAAAF,GAEA,SAASD,IACL,OACIE,EAAAzB,EAAAM,cAAA,OAAKqB,UAAU,WACXF,EAAAzB,EAAAM,cAAA,WACImB,EAAAzB,EAAAM,cAAA,KAAGqB,UAAU,0BADjB,gDCLZ7C,EAAAwC,EAAAtC,EAAA,sBAAA4C,IAAA,IAAAJ,EAAA1C,EAAA,GAAA2C,EAAA3C,EAAA4C,EAAAF,GAEA,SAASI,EAAKrC,GAAO,IACXC,EAAwCD,EAAxCC,MAAOqC,EAAiCtC,EAAjCsC,KAAMrB,EAA2BjB,EAA3BiB,MAAOC,EAAoBlB,EAApBkB,MAAOC,EAAanB,EAAbmB,SAgBjC,OAfImB,IAEqB,iBAAVA,IACPA,EAAO,CAAEA,GACTrB,EAAQ,CAAEA,IAGdA,EAAQqB,EAAKC,IAAI,SAACC,EAAKC,GACnB,IAAIC,EAAQzB,EAASA,EAAMwB,GAAS,KAIpC,OAHKC,IACDA,EAAO,CAAEF,MAAKG,SAAS,IAEpBD,KAGVzB,EAGgB,IAAjBA,EAAM2B,OACCV,EAAAzB,EAAAM,cAAA,MAAIqB,UAAU,SAAQF,EAAAzB,EAAAM,cAAA,UAAImB,EAAAzB,EAAAM,cAAA,sBAE9BmB,EAAAzB,EAAAM,cAAA,UAAKE,EAAMsB,IAElB,SAAoBG,EAAMG,GACtB,IAAMC,EAAK7C,EAAM8C,UAAUL,EAAKF,KAC1BA,EAAMvC,EAAM+C,KAAK7B,EAAU,CAAE2B,OAC7BG,EAAOP,EAAKC,QAAU,MAAQD,EAAKxB,GACnCgC,EAAY,CACdC,KAAMX,EACNJ,UAAYM,EAAKC,QAAW,eAAYS,GAE5C,OAAOlB,EAAAzB,EAAAM,cAAA,MAAIsC,IAAKR,GAAGX,EAAAzB,EAAAM,cAAA,IAAOmC,EAAYD,OAf/B,KAmBfZ,EAAKiB,aAAe,CAChBpC,MAAO","file":"species-list.js","sourcesContent":["import { get, set, plant } from './options';\nimport { use, memo } from './hooks';\n\nexport default {\n\tget: get,\n\tset: set,\n\tplant: plant,\n\n\tuse: use,\n\tmemo: memo,\t\n};\n\nexport * from './options';\nexport * from './class';\nexport * from './hooks';\nexport * from './async-rendering-cycle';\nexport * from './async-rendering-interrupted';\nexport * from './async-save-buffer';\n","import React from 'react';\nimport Relaks, { useProgress } from 'relaks';\nimport { List } from 'widgets/list';\nimport { Loading } from 'widgets/loading';\n\nasync function SpeciesList(props) {\n    const { route, swapi } = props;\n    const [ show ] = useProgress();\n\n    render();\n    const species = await swapi.fetchList('/species/');\n    render();\n\n    species.more();\n\n    function render() {\n        if (!species) {\n            show(<Loading />);\n        } else {\n            show(\n                <div>\n                    <h1>Species</h1>\n                    <List items={species} field=\"name\" pageName=\"species-summary\" route={route} />\n                </div>\n            );\n        }\n    }\n}\n\nconst component = Relaks.memo(SpeciesList);\n\nexport {\n    component as default,\n};\n","import React, { Component } from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List\n};\n"],"sourceRoot":""}