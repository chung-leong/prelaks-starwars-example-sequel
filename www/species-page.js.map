{"version":3,"sources":["webpack:///./pages/species-page.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["props","render","a","show","species","name","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","urls","homeworld","items","pageName","route","people","films","field","swapi","useProgress","fetchOne","params","id","fetchMultiple","minimum","component","Relaks","memo","List","map","url","index","item","pending","length","className","i","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"oRAKA,WAA2BA,GAA3B,sBAcWC,EAdX,SAAAC,EAAA,6DAcWD,EAdX,WAkBME,EAHGC,EAID,6BACE,4BAAKA,EAAQC,MACb,gDAAsBD,EAAQE,gBAC9B,6CAAmBF,EAAQG,aAC3B,gDAAsBH,EAAQI,gBAC9B,6CAAmBJ,EAAQK,aAC3B,6CAAmBL,EAAQM,aAC3B,4CAAkBN,EAAQO,YAC1B,kDAAwBP,EAAQQ,kBAChC,0CAAgBR,EAAQS,UACxB,yCACA,kBAAC,IAAD,CAAMC,KAAMV,EAAQW,UAAWC,MAAOD,EAAWE,SAAS,iBAAiBC,MAAOA,IAClF,uCACA,kBAAC,IAAD,CAAMJ,KAAMV,EAAQe,OAAQH,MAAOG,EAAQF,SAAS,oBAAoBC,MAAOA,IAC/E,qCACA,kBAAC,IAAD,CAAMJ,KAAMV,EAAQgB,MAAOJ,MAAOI,EAAOC,MAAM,QAAQJ,SAAS,eAAeC,MAAOA,KAlBrF,kBAAC,IAAD,QAfDA,EAAiBlB,EAAjBkB,MAAOI,EAAUtB,EAAVsB,MADjB,EAEmBC,cAFnB,WAEUpB,EAFV,KAIEF,IAJF,SAKwBqB,EAAME,SAAN,mBAA2BN,EAAMO,OAAOC,GAAxC,MALxB,cAKQtB,EALR,OAMEH,IANF,UAOsBqB,EAAMK,cAAcvB,EAAQgB,MAAO,CAAEQ,QAAS,QAPpE,eAOQR,EAPR,OAQEnB,IARF,UASuBqB,EAAMK,cAAcvB,EAAQe,OAAQ,CAAES,QAAS,QATtE,eASQT,EATR,OAUElB,IAVF,UAW0BqB,EAAME,SAASpB,EAAQW,WAXjD,QAWQA,EAXR,OAYEd,IAZF,6C,sBAyCA,IAAM4B,EAAYC,IAAOC,M,+EC9CzB,sDAEA,SAASC,EAAKhC,GAAO,IACXkB,EAAwClB,EAAxCkB,MAAOJ,EAAiCd,EAAjCc,KAAME,EAA2BhB,EAA3BgB,MAAOK,EAAoBrB,EAApBqB,MAAOJ,EAAajB,EAAbiB,SAgBjC,OAfIH,IAEqB,iBAAVA,IACPA,EAAO,CAAEA,GACTE,EAAQ,CAAEA,IAGdA,EAAQF,EAAKmB,KAAI,SAACC,EAAKC,GACnB,IAAIC,EAAQpB,EAASA,EAAMmB,GAAS,KAIpC,OAHKC,IACDA,EAAO,CAAEF,MAAKG,SAAS,IAEpBD,MAGVpB,EAGgB,IAAjBA,EAAMsB,OACC,wBAAIC,UAAU,SAAQ,4BAAI,wCAE9B,4BAAKvB,EAAMiB,KAElB,SAAoBG,EAAMI,GACtB,IAAMd,EAAKR,EAAMuB,UAAUL,EAAKF,KAC1BA,EAAMhB,EAAMwB,KAAKzB,EAAU,CAAES,OAC7BiB,EAAOP,EAAKC,QAAU,MAAQD,EAAKf,GACnCuB,EAAY,CACdC,KAAMX,EACNK,UAAYH,EAAKC,QAAW,eAAYS,GAE5C,OAAO,wBAAIC,IAAKP,GAAG,sBAAOI,EAAYD,QAf/B,KAmBfX,EAAKgB,aAAe,CAChB3B,MAAO,S,gCCxCX,sDAEA,SAAS4B,IACL,OACI,yBAAKV,UAAU,WACX,6BACI,uBAAGA,UAAU,0BADjB","file":"species-page.js","sourcesContent":["import React from 'react';\nimport Relaks, { useProgress } from 'relaks';\nimport { List } from '../widgets/list.jsx';\nimport { Loading } from '../widgets/loading.jsx';\n\nasync function SpeciesPage(props) {\n  const { route, swapi } = props;\n  const [ show ] = useProgress();\n\n  render();\n  const species = await swapi.fetchOne(`/species/${route.params.id}/`);\n  render();\n  const films = await swapi.fetchMultiple(species.films, { minimum: '60%' });\n  render();\n  const people = await swapi.fetchMultiple(species.people, { minimum: '60%' });\n  render();\n  const homeworld = await swapi.fetchOne(species.homeworld);\n  render();\n\n  function render() {\n    if (!species) {\n      show(<Loading />);\n    } else {\n      show(\n        <div>\n          <h1>{species.name}</h1>\n          <div>Classification: {species.classification}</div>\n          <div>Designation: {species.designation}</div>\n          <div>Average height: {species.average_height}</div>\n          <div>Skin colors: {species.skin_colors}</div>\n          <div>Hair colors: {species.hair_colors}</div>\n          <div>Eye colors: {species.eye_colors}</div>\n          <div>Average lifespan: {species.average_lifespan}</div>\n          <div>Language: {species.language}</div>\n          <h2>Homeworld</h2>\n          <List urls={species.homeworld} items={homeworld} pageName=\"planet-summary\" route={route} />\n          <h2>Members</h2>\n          <List urls={species.people} items={people} pageName=\"character-summary\" route={route} />\n          <h2>Films</h2>\n          <List urls={species.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n        </div>\n      );\n    }\n  }\n}\n\nconst component = Relaks.memo(SpeciesPage);\n\nexport {\n  component as default,\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            let item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return <ul>{items.map(renderItem)}</ul>;\n\n    function renderItem(item, i) {\n        const id = route.extractID(item.url);\n        const url = route.find(pageName, { id });\n        const text = item.pending ? '...' : item[field];\n        const linkProps = {\n            href: url,\n            className: (item.pending) ? 'pending' : undefined,\n        };\n        return <li key={i}><a {...linkProps}>{text}</a></li>;\n    }\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nexport {\n    List\n};\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}